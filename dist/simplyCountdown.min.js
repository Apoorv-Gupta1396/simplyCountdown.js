/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.1.0
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(e){"use strict";var n,s;n=function(e){var s,r,t;for(e=e||{},s=1;s<arguments.length;s+=1)if(r=arguments[s])for(t in r)r.hasOwnProperty(t)&&("object"==typeof r[t]?n(e[t],r[t]):e[t]=r[t]);return e},s=function(e,s){var r,t,o,d,i,a,u,l=n({year:2015,month:6,day:28,hours:0,minutes:0,seconds:0,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},s),c=document.getElementById(e);r=new Date(l.year,l.month-1,l.day,l.hours,l.minutes,l.seconds),window.setInterval(function(){var e,n,s,m,w,p,L,y,T,H;t=(new Date).getTime(),o=(r-t)/1e3,o>0?(d=parseInt(o/86400,10),o%=86400,i=parseInt(o/3600,10),o%=3600,a=parseInt(o/60,10),u=parseInt(o%60,10)):(d=0,i=0,a=0,u=0),l.plural?(p=d>1?l.words.days+l.words.pluralLetter:l.words.days,L=i>1?l.words.hours+l.words.pluralLetter:l.words.hours,y=a>1?l.words.minutes+l.words.pluralLetter:l.words.minutes,H=u>1?l.words.seconds+l.words.pluralLetter:l.words.seconds):(p=l.words.days,L=l.words.hours,y=l.words.minutes,H=l.words.seconds),l.inline?(e=document.createElement("span"),e.classList.add(l.inlineClass),e.innerHTML=d+" "+p+", "+i+" "+L+", "+a+" "+y+", "+u+" "+H+", ",c.innerHTML=e.outerHTML):(n=document.createElement("div"),s=document.createElement("span"),w=document.createElement("span"),m=document.createElement("div"),n.classList.add(l.sectionClass),s.classList.add(l.amountClass),w.classList.add(l.wordClass),m.appendChild(s),m.appendChild(w),n.appendChild(m),s.innerHTML=d,w.innerHTML=p,T=n.outerHTML,s.innerHTML=i,w.innerHTML=L,T+=n.outerHTML,s.innerHTML=a,w.innerHTML=y,T+=n.outerHTML,s.innerHTML=u,w.innerHTML=H,T+=n.outerHTML,c.innerHTML=T)},1e3)},e.simplyCountdown=s}(window),window.jQuery&&!function(e,n){"use strict";function s(e,s){n(e,s)}e.fn.simplyCountdown=function(e){return s(this.selector.replace("#",""),e)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,
/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.2.0
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(e){"use strict";var n,t;n=function(e){var t,s,r;for(e=e||{},t=1;t<arguments.length;t+=1)if(s=arguments[t])for(r in s)s.hasOwnProperty(r)&&("object"==typeof s[r]?n(e[r],s[r]):e[r]=s[r]);return e},t=function(e,t){var s,r,o,a,i,d,u,l,c,w=n({year:2015,month:6,day:28,hours:0,minutes:0,seconds:0,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,enableUtc:!0,inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},t),m=document.querySelectorAll(e);r=new Date(w.year,w.month-1,w.day,w.hours,w.minutes,w.seconds),s=w.enableUtc?new Date(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate(),r.getUTCHours(),r.getUTCMinutes(),r.getUTCSeconds()):r,Array.prototype.forEach.call(m,function(e){window.setInterval(function(){var n,t,r,m,p,L,T,y,C,M;o=new Date,w.enableUtc?(a=new Date(o.getFullYear(),o.getMonth(),o.getDate(),o.getHours(),o.getMinutes(),o.getSeconds()),i=(s-a.getTime())/1e3):i=(s-o.getTime())/1e3,i>0?(d=parseInt(i/86400,10),i%=86400,u=parseInt(i/3600,10),i%=3600,l=parseInt(i/60,10),c=parseInt(i%60,10)):(d=0,u=0,l=0,c=0),w.plural?(L=d>1?w.words.days+w.words.pluralLetter:w.words.days,T=u>1?w.words.hours+w.words.pluralLetter:w.words.hours,y=l>1?w.words.minutes+w.words.pluralLetter:w.words.minutes,M=c>1?w.words.seconds+w.words.pluralLetter:w.words.seconds):(L=w.words.days,T=w.words.hours,y=w.words.minutes,M=w.words.seconds),w.inline?(n=document.createElement("span"),n.classList.add(w.inlineClass),n.innerHTML=d+" "+L+", "+u+" "+T+", "+l+" "+y+", "+c+" "+M+", ",e.innerHTML=n.outerHTML):(t=document.createElement("div"),r=document.createElement("span"),p=document.createElement("span"),m=document.createElement("div"),t.classList.add(w.sectionClass),r.classList.add(w.amountClass),p.classList.add(w.wordClass),m.appendChild(r),m.appendChild(p),t.appendChild(m),r.innerHTML=d,p.innerHTML=L,C=t.outerHTML,r.innerHTML=u,p.innerHTML=T,C+=t.outerHTML,r.innerHTML=l,p.innerHTML=y,C+=t.outerHTML,r.innerHTML=c,p.innerHTML=M,C+=t.outerHTML,e.innerHTML=C)},1e3)})},e.simplyCountdown=t}(window),window.jQuery&&!function(e,n){"use strict";function t(e,t){n(e,t)}e.fn.simplyCountdown=function(e){return t(this.selector,e)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,
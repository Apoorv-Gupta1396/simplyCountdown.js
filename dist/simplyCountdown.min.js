/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.1.1
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(n){"use strict";var e,s;e=function(n){var s,r,t;for(n=n||{},s=1;s<arguments.length;s+=1)if(r=arguments[s])for(t in r)r.hasOwnProperty(t)&&("object"==typeof r[t]?e(n[t],r[t]):n[t]=r[t]);return n},s=function(n,s){var r,t,o,i,a,d,u,l=e({year:2015,month:6,day:28,hours:0,minutes:0,seconds:0,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},s),c=document.querySelectorAll(n);r=new Date(l.year,l.month-1,l.day,l.hours,l.minutes,l.seconds),Array.prototype.forEach.call(c,function(n){window.setInterval(function(){var e,s,c,m,w,p,L,y,T,h;t=(new Date).getTime(),o=(r-t)/1e3,o>0?(i=parseInt(o/86400,10),o%=86400,a=parseInt(o/3600,10),o%=3600,d=parseInt(o/60,10),u=parseInt(o%60,10)):(i=0,a=0,d=0,u=0),l.plural?(p=i>1?l.words.days+l.words.pluralLetter:l.words.days,L=a>1?l.words.hours+l.words.pluralLetter:l.words.hours,y=d>1?l.words.minutes+l.words.pluralLetter:l.words.minutes,h=u>1?l.words.seconds+l.words.pluralLetter:l.words.seconds):(p=l.words.days,L=l.words.hours,y=l.words.minutes,h=l.words.seconds),l.inline?(e=document.createElement("span"),e.classList.add(l.inlineClass),e.innerHTML=i+" "+p+", "+a+" "+L+", "+d+" "+y+", "+u+" "+h+", ",n.innerHTML=e.outerHTML):(s=document.createElement("div"),c=document.createElement("span"),w=document.createElement("span"),m=document.createElement("div"),s.classList.add(l.sectionClass),c.classList.add(l.amountClass),w.classList.add(l.wordClass),m.appendChild(c),m.appendChild(w),s.appendChild(m),c.innerHTML=i,w.innerHTML=p,T=s.outerHTML,c.innerHTML=a,w.innerHTML=L,T+=s.outerHTML,c.innerHTML=d,w.innerHTML=y,T+=s.outerHTML,c.innerHTML=u,w.innerHTML=h,T+=s.outerHTML,n.innerHTML=T)},1e3)})},n.simplyCountdown=s}(window),window.jQuery&&!function(n,e){"use strict";function s(n,s){e(n,s)}n.fn.simplyCountdown=function(n){return s(this.selector,n)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,
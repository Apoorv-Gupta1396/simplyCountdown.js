/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.0.0
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(e){"use strict";var n,s;n=function(e){e=e||{};for(var s=1;s<arguments.length;s++){var r=arguments[s];if(r)for(var t in r)r.hasOwnProperty(t)&&("object"==typeof r[t]?n(e[t],r[t]):e[t]=r[t])}return e},s=function(e,s){var r,t,o,a,d,i,l=n({year:2015,month:6,day:28,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},s),u=new Date(l.year,l.month-1,l.day),c=document.getElementById(e);window.setInterval(function(){var e,n,s,m,w,p,L,y,T,H;r=(new Date).getTime(),t=(u-r)/1e3,t>0?(o=parseInt(t/86400),t%=86400,a=parseInt(t/3600),t%=3600,d=parseInt(t/60),i=parseInt(t%60)):(o=0,a=0,d=0,i=0),l.plural?(p=o>1?l.words.days+l.words.pluralLetter:l.words.days,L=a>1?l.words.hours+l.words.pluralLetter:l.words.hours,y=d>1?l.words.minutes+l.words.pluralLetter:l.words.minutes,H=i>1?l.words.seconds+l.words.pluralLetter:l.words.seconds):(p=l.words.days,L=l.words.hours,y=l.words.minutes,H=l.words.seconds),l.inline?(e=document.createElement("span"),e.classList.add(l.inlineClass),e.innerHTML=o+" "+p+", "+a+" "+L+", "+d+" "+y+", "+i+" "+H+", ",c.innerHTML=e.outerHTML):(n=document.createElement("div"),s=document.createElement("span"),w=document.createElement("span"),m=document.createElement("div"),n.classList.add(l.sectionClass),s.classList.add(l.amountClass),w.classList.add(l.wordClass),m.appendChild(s),m.appendChild(w),n.appendChild(m),s.innerHTML=o,w.innerHTML=p,T=n.outerHTML,s.innerHTML=a,w.innerHTML=L,T+=n.outerHTML,s.innerHTML=d,w.innerHTML=y,T+=n.outerHTML,s.innerHTML=i,w.innerHTML=H,T+=n.outerHTML,c.innerHTML=T)},1e3)},e.simplyCountdown=s}(window),function(e,n){"use strict";function s(e,s){n(e,s)}e.fn.simplyCountdown=function(e){return s(this.selector.replace("#",""),e)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,
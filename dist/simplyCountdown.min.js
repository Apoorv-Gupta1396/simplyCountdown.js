/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.2.0
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(e){"use strict";var n,s,t;n=function(e){var s,t,a;for(e=e||{},s=1;s<arguments.length;s+=1)if(t=arguments[s])for(a in t)t.hasOwnProperty(a)&&("object"==typeof t[a]?n(e[a],t[a]):e[a]=t[a]);return e},s=function(e,n){var s,t,a,d,o,r,l,i,u,c,m,p,w,C,h,L;return e.inline?(spanTag=document.createElement("span"),void spanTag.classList.add(e.inlineClass)):(s=document.createElement("div"),t=document.createElement("span"),a=document.createElement("span"),d=document.createElement("div"),d.appendChild(t),d.appendChild(a),s.appendChild(d),u=document.createElement("div"),c=document.createElement("span"),m=document.createElement("span"),p=document.createElement("div"),p.appendChild(c),p.appendChild(m),u.appendChild(p),o=document.createElement("div"),r=document.createElement("span"),l=document.createElement("span"),i=document.createElement("div"),i.appendChild(r),i.appendChild(l),o.appendChild(i),w=document.createElement("div"),C=document.createElement("span"),h=document.createElement("span"),L=document.createElement("div"),L.appendChild(C),L.appendChild(h),w.appendChild(L),s.classList.add(e.sectionClass),o.classList.add(e.sectionClass),u.classList.add(e.sectionClass),w.classList.add(e.sectionClass),t.classList.add(e.amountClass),r.classList.add(e.amountClass),c.classList.add(e.amountClass),C.classList.add(e.amountClass),a.classList.add(e.wordClass),l.classList.add(e.wordClass),m.classList.add(e.wordClass),h.classList.add(e.wordClass),n.appendChild(s),n.appendChild(o),n.appendChild(u),n.appendChild(w),{days:{full:s,amount:t,word:a},hours:{full:o,amount:r,word:l},minutes:{full:u,amount:c,word:m},seconds:{full:w,amount:C,word:h}})},t=function(e,t){var a,d,o,r,l,i,u,c,m,p=n({year:2015,month:6,day:28,hours:0,minutes:0,seconds:0,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,enableUtc:!0,inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},t),w=document.querySelectorAll(e);d=new Date(p.year,p.month-1,p.day,p.hours,p.minutes,p.seconds),a=p.enableUtc?new Date(d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate(),d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds()):d,Array.prototype.forEach.call(w,function(e){var n=s(p,e);window.setInterval(function(){var s,t,d,w,C;o=new Date,p.enableUtc?(r=new Date(o.getFullYear(),o.getMonth(),o.getDate(),o.getHours(),o.getMinutes(),o.getSeconds()),l=(a-r.getTime())/1e3):l=(a-o.getTime())/1e3,l>0?(i=parseInt(l/86400,10),l%=86400,u=parseInt(l/3600,10),l%=3600,c=parseInt(l/60,10),m=parseInt(l%60,10)):(i=0,u=0,c=0,m=0),p.plural?(t=i>1?p.words.days+p.words.pluralLetter:p.words.days,d=u>1?p.words.hours+p.words.pluralLetter:p.words.hours,w=c>1?p.words.minutes+p.words.pluralLetter:p.words.minutes,C=m>1?p.words.seconds+p.words.pluralLetter:p.words.seconds):(t=p.words.days,d=p.words.hours,w=p.words.minutes,C=p.words.seconds),p.inline?(s=document.createElement("span"),s.classList.add(p.inlineClass),s.innerHTML=i+" "+t+", "+u+" "+d+", "+c+" "+w+", "+m+" "+C+", ",e.innerHTML=s.outerHTML):(n.days.amount.innerHTML=i,n.days.word.innerHTML=t,n.hours.amount.innerHTML=u,n.hours.word.innerHTML=d,n.minutes.amount.innerHTML=c,n.minutes.word.innerHTML=w,n.seconds.amount.innerHTML=m,n.seconds.word.innerHTML=C)},1e3)})},e.simplyCountdown=t}(window),window.jQuery&&!function(e,n){"use strict";function s(e,s){n(e,s)}e.fn.simplyCountdown=function(e){return s(this.selector,e)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,
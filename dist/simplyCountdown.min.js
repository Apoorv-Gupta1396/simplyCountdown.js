/*!
 * Project : simply-countdown
 * File : simplyCountdown
 * Date : 27/06/2015
 * License : MIT
 * Version : 1.2.0
 * Author : Vincent Loy <vincent.loy1@gmail.com>
 */
!function(e){"use strict";var n,s,t;n=function(e){var s,t,a;for(e=e||{},s=1;s<arguments.length;s+=1)if(t=arguments[s])for(a in t)t.hasOwnProperty(a)&&("object"==typeof t[a]?n(e[a],t[a]):e[a]=t[a]);return e},s=function(e,n){var s,t,a,d,o,r,l,i,u,c,m,p,w,C,h,L,y;return e.inline?(s=document.createElement("span"),s.classList.add(e.inlineClass),s):(t=document.createElement("div"),a=document.createElement("span"),d=document.createElement("span"),o=document.createElement("div"),o.appendChild(a),o.appendChild(d),t.appendChild(o),c=document.createElement("div"),m=document.createElement("span"),p=document.createElement("span"),w=document.createElement("div"),w.appendChild(m),w.appendChild(p),c.appendChild(w),r=document.createElement("div"),l=document.createElement("span"),i=document.createElement("span"),u=document.createElement("div"),u.appendChild(l),u.appendChild(i),r.appendChild(u),C=document.createElement("div"),h=document.createElement("span"),L=document.createElement("span"),y=document.createElement("div"),y.appendChild(h),y.appendChild(L),C.appendChild(y),t.classList.add(e.sectionClass),r.classList.add(e.sectionClass),c.classList.add(e.sectionClass),C.classList.add(e.sectionClass),a.classList.add(e.amountClass),l.classList.add(e.amountClass),m.classList.add(e.amountClass),h.classList.add(e.amountClass),d.classList.add(e.wordClass),i.classList.add(e.wordClass),p.classList.add(e.wordClass),L.classList.add(e.wordClass),n.appendChild(t),n.appendChild(r),n.appendChild(c),n.appendChild(C),{days:{full:t,amount:a,word:d},hours:{full:r,amount:l,word:i},minutes:{full:c,amount:m,word:p},seconds:{full:C,amount:h,word:L}})},t=function(e,t){var a,d,o,r,l,i,u,c,m,p,w=n({year:2015,month:6,day:28,hours:0,minutes:0,seconds:0,words:{days:"day",hours:"hour",minutes:"minute",seconds:"second",pluralLetter:"s"},plural:!0,inline:!1,enableUtc:!0,onEnd:function(){},inlineClass:"simply-countdown-inline",sectionClass:"simply-section",amountClass:"simply-amount",wordClass:"simply-word"},t),C=document.querySelectorAll(e);o=new Date(w.year,w.month-1,w.day,w.hours,w.minutes,w.seconds),d=w.enableUtc?new Date(o.getUTCFullYear(),o.getUTCMonth(),o.getUTCDate(),o.getUTCHours(),o.getUTCMinutes(),o.getUTCSeconds()):o,Array.prototype.forEach.call(C,function(e){var n=s(w,e);a=window.setInterval(function(){var s,t,o,C;r=new Date,w.enableUtc?(l=new Date(r.getFullYear(),r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds()),i=(d-l.getTime())/1e3):i=(d-r.getTime())/1e3,i>0?(u=parseInt(i/86400,10),i%=86400,c=parseInt(i/3600,10),i%=3600,m=parseInt(i/60,10),p=parseInt(i%60,10)):(u=0,c=0,m=0,p=0,window.clearInterval(a),w.onEnd()),w.plural?(s=u>1?w.words.days+w.words.pluralLetter:w.words.days,t=c>1?w.words.hours+w.words.pluralLetter:w.words.hours,o=m>1?w.words.minutes+w.words.pluralLetter:w.words.minutes,C=p>1?w.words.seconds+w.words.pluralLetter:w.words.seconds):(s=w.words.days,t=w.words.hours,o=w.words.minutes,C=w.words.seconds),w.inline?e.innerHTML=u+" "+s+", "+c+" "+t+", "+m+" "+o+", "+p+" "+C+".":(n.days.amount.innerHTML=u,n.days.word.innerHTML=s,n.hours.amount.innerHTML=c,n.hours.word.innerHTML=t,n.minutes.amount.innerHTML=m,n.minutes.word.innerHTML=o,n.seconds.amount.innerHTML=p,n.seconds.word.innerHTML=C)},1e3)})},e.simplyCountdown=t}(window),window.jQuery&&!function(e,n){"use strict";function s(e,s){n(e,s)}e.fn.simplyCountdown=function(e){return s(this.selector,e)}}(jQuery,simplyCountdown);
//# sourceMappingURL=data:application/json;base64,